[
  {
    "id": "29b235cc-72fa-81a5-9e01-e65486cfaa44",
    "title": "Beginner's Guide to Personal Finance Management",
    "slug": "beginner-s-guide-to-personal-finance-management",
    "description": "# **Changelog for 2024**",
    "date": "2025-06-11",
    "content": "\n# **Changelog for 2024**\n\n\n## **Lorem ipsum heading**\n\n\nNostrud sit reprehenderit labore enim minim veniam elit reprehenderit laborum ea consequat excepteur elit anim. Labore consequat Lorem dolor magna consequat sunt eu occaecat laboris mollit incididunt quis consectetur dolore. Cillum eiusmod ipsum ex do qui. Proident ex ullamco excepteur proident Lorem aliquip quis ex sunt nostrud qui excepteur velit proident laborum.\n\n\nNostrud sit reprehenderit labore enim minim veniam elit reprehenderit laborum ea consequat excepteur elit anim. Labore consequat Lorem dolor magna consequat sunt eu occaecat laboris mollit incididunt quis consectetur dolore. Cillum eiusmod ipsum ex do qui. Proident ex ullamco excepteur proident Lorem aliquip quis ex sunt nostrud qui excepteur velit proident laborum.\n\n\n```javascript\n\"use client\";\n\nimport { useRouter } from \"next/navigation\";\nimport { BlogWithSlug } from \"@/lib/blog\";\n\nexport function BlogLayout({\n  blog,\n  children,\n}: {\n  blog: BlogWithSlug,\n  children: React.ReactNode,\n}) {\n  let router = useRouter();\n  return (\n    <div className=\"mt-16 lg:mt-32\">\n      <div className=\"xl:relative\">\n        <div className=\"mx-auto max-w-2xl\">\n          <article>\n            <header className=\"flex flex-col\">\n              <h1 className=\"mt-6 text-4xl font-bold tracking-tight text-zinc-800 sm:text-5xl dark:text-zinc-100\">\n                {blog.title}\n              </h1>\n              <time\n                dateTime={blog.date}className=\"order-first flex items-center text-base text-zinc-400 dark:text-zinc-500\">\n                <span className=\"h-4 w-0.5 rounded-full bg-zinc-200 dark:bg-zinc-500\" />\n                <span className=\"ml-3\">{blog.date.toString()}</span>\n              </time>\n            </header>\n            <div className=\"mt-8 prose prose-sm\" data-mdx-content>\n              {children}\n            </div>\n          </article>\n        </div>\n      </div>\n    </div>);\n}\n```\n\n\n## **Lorem ipsum heading**\n\n\nNostrud sit reprehenderit labore enim minim veniam elit reprehenderit laborum ea consequat excepteur elit anim. Labore consequat Lorem dolor magna consequat sunt eu occaecat laboris mollit incididunt quis consectetur dolore. Cillum eiusmod ipsum ex do qui. Proident ex ullamco excepteur proident Lorem aliquip quis ex sunt nostrud qui excepteur velit proident laborum.\n\n\nNostrud sit reprehenderit labore enim minim veniam elit reprehenderit laborum ea consequat excepteur elit anim. Labore consequat Lorem dolor magna consequat sunt eu occaecat laboris mollit incididunt quis consectetur dolore. Cillum eiusmod ipsum ex do qui. Proident ex ullamco excepteur proident Lorem aliquip quis ex sunt nostrud qui excepteur velit proident laborum.\n\n\n## **Lorem ipsum heading**\n\n\nNostrud sit reprehenderit labore enim minim veniam elit reprehenderit laborum ea consequat excepteur elit anim. Labore consequat Lorem dolor magna consequat sunt eu occaecat laboris mollit incididunt quis consectetur dolore. Cillum eiusmod ipsum ex do qui. Proident ex ullamco excepteur proident Lorem aliquip quis ex sunt nostrud qui excepteur velit proident laborum.\n\n\nNostrud sit reprehenderit labore enim minim veniam elit reprehenderit laborum ea consequat excepteur elit anim. Labore consequat Lorem dolor magna consequat sunt eu occaecat laboris mollit incididunt quis consectetur dolore. Cillum eiusmod ipsum ex do qui. Proident ex ullamco excepteur proident Lorem aliquip quis ex sunt nostrud qui excepteur velit proident laborum.\n\n\n## **Lorem ipsum heading**\n\n\nNostrud sit reprehenderit labore enim minim veniam elit reprehenderit laborum ea consequat excepteur elit anim. Labore consequat Lorem dolor magna consequat sunt eu occaecat laboris mollit incididunt quis consectetur dolore. Cillum eiusmod ipsum ex do qui. Proident ex ullamco excepteur proident Lorem aliquip quis ex sunt nostrud qui excepteur velit proident laborum.\n\n\nNostrud sit reprehenderit labore enim minim veniam elit reprehenderit laborum ea consequat excepteur elit anim. Labore consequat Lorem dolor magna consequat sunt eu occaecat laboris mollit incididunt quis consectetur dolore. Cillum eiusmod ipsum ex do qui. Proident ex ullamco excepteur proident Lorem aliquip quis ex sunt nostrud qui excepteur velit proident laborum.\n\n",
    "tags": [
      "Finance",
      "Personal"
    ],
    "category": "Business"
  },
  {
    "id": "29b235cc-72fa-8186-9099-eceb2929be44",
    "title": "10 Essential  Tools for Remote Workers",
    "slug": "10-essential-tools-for-remote-workers",
    "description": "ggggg",
    "date": "2025-06-10",
    "content": "\nggggg\n\n",
    "tags": [
      "Technology",
      "Productivity"
    ],
    "category": "Technology"
  },
  {
    "id": "29b235cc-72fa-813a-82a4-e92c1be8d337",
    "title": "Sustainable Travel: How to Reduce Your Carbon Footprint",
    "slug": "sustainable-travel-how-to-reduce-your-carbon-footprint",
    "description": "gggggg",
    "date": "2025-06-08",
    "content": "\ngggggg\n\n",
    "tags": [
      "Travel",
      "Personal"
    ],
    "category": "Travel"
  },
  {
    "id": "29b235cc-72fa-819d-9bf1-c0fbd1c04056",
    "title": "Vai ≈°is strƒÅdƒÅ?",
    "slug": "vai-is-str-d",
    "description": "KƒÅ ≈°is strƒÅdƒÅ? ",
    "date": "2025-10-30T17:29:19.755Z",
    "content": "\nKƒÅ ≈°is strƒÅdƒÅ? \n\n> Man nav ne jausmas!\n",
    "author": "MƒÅrti≈Ü≈° Auseklis",
    "tags": [
      "Technology"
    ],
    "category": "Technology"
  },
  {
    "id": "29b235cc-72fa-819a-8d60-f6d89571c558",
    "title": "üìà Next.js SEO ‚Äî A Clean & Practical Checklist",
    "slug": "next-js-seo-a-clean-practical-checklist",
    "description": "If you want your Next.js site to actually show up on Google (and look great when shared on social), this is what you should do ‚Äî step by step.",
    "date": "2025-10-30T17:29:24.880Z",
    "content": "\nIf you want your Next.js site to actually show up on Google (and look great when shared on social), this is what you should do ‚Äî step by step.\n\n\n---\n\n\n## üè∑Ô∏è Meta Tags ‚Äî Why They Matter\n\n\nMeta tags give search engines and social platforms info about your page.\n\n\nIf you skip them, your site might look like a blank page on Google or Twitter.\n\n\nüëâ **Always add these basic meta tags:**\n\n\n| Tag           | Why it's important                                         |\n| ------------- | ---------------------------------------------------------- |\n| `title`       | The title of your page (what people see on Google results) |\n| `description` | Short description (also visible in search results)         |\n| `keywords`    | Optional, not used much by Google, but harmless            |\n| `robots`      | Tells crawlers if they should index your page              |\n| `viewport`    | Controls how your site looks on mobile devices             |\n| `charSet`     | Character encoding (UTF-8 is standard)                     |\n\n\nüëâ **Open Graph meta tags:** (for social sharing)\n\n\n| Tag                                  | Why it's important                                |\n| ------------------------------------ | ------------------------------------------------- |\n| `og:site_name`                       | Name of your site                                 |\n| `og:locale`                          | Language/locale                                   |\n| `og:title`                           | Title when shared on social                       |\n| `og:description`                     | Description on social                             |\n| `og:type`                            | `website` or `article`                            |\n| `og:url`                             | URL of the page                                   |\n| `og:image`                           | Image shown in preview _(use PNG/JPG ‚Äî no WebP!)_ |\n| `og:image:alt`                       | Alt text for accessibility                        |\n| `og:image:type`                      | Image type (image/png)                            |\n| `og:image:width` + `og:image:height` | Image dimensions                                  |\n\n\nüëâ **Article-specific Open Graph tags:**\n\n\n_(important for blog posts, articles, news)_\n\n\n| Tag                      | Why it's important    |\n| ------------------------ | --------------------- |\n| `article:published_time` | When it was published |\n| `article:modified_time`  | Last update time      |\n| `article:author`         | Author name           |\n\n\nüëâ **Twitter meta tags:** (for Twitter/X previews)\n\n\n| Tag                   | Why it's important        |\n| --------------------- | ------------------------- |\n| `twitter:card`        | Large image summary       |\n| `twitter:site`        | Site's Twitter handle     |\n| `twitter:creator`     | Author's Twitter handle   |\n| `twitter:title`       | Title on Twitter          |\n| `twitter:description` | Description on Twitter    |\n| `twitter:image`       | Image URL (again PNG/JPG) |\n\n\n---\n\n\n## ‚öôÔ∏è How to Add Meta Tags in Next.js\n\n\nüëâ In App Router, define `viewport` + `metadata`:\n\n\n```typescript\nexport const viewport = {\n  width: \"device-width\",\n  initialScale: 1,\n  themeColor: \"#ffffff\"\n};\n```\n\n\n```typescript\nexport const metadata = {\n  title: \"Site Title\",\n  description: \"Short site description\",\n  keywords: [\"keyword1\", \"keyword2\"],\n  openGraph: {\n    siteName: \"My Site\",\n    type: \"website\",\n    locale: \"en_US\",\n    images: [{ url: \"https://yoursite.com/og-image.png\", width: 1200, height: 630, alt: \"My Site\" }]\n  },\n  twitter: {\n    card: \"summary_large_image\",\n    title: \"Site Title\",\n    description: \"Short site description\",\n    images: [{ url: \"https://yoursite.com/og-image.png\", width: 1200, height: 630, alt: \"My Site\" }]\n  },\n  robots: {\n    index: true,\n    follow: true,\n    googleBot: \"index, follow\"\n  },\n  alternates: {\n    canonical: \"https://yoursite.com\"\n  }\n};\n```\n\n\nüëâ On dynamic pages (blog posts), use `generateMetadata()`:\n\n\n```typescript\nexport async function generateMetadata({ params }) {\n  const post = await fetch(`YOUR_ENDPOINT/${params.slug}`).then(res => res.json());\n\n  return {\n    title: `${post.title} | My Site`,\n    description: post.description,\n    openGraph: {\n      title: `${post.title} | My Site`,\n      description: post.description,\n      type: \"article\",\n      url: `https://yoursite.com/${post.slug}`,\n      publishedTime: post.created_at,\n      modifiedTime: post.modified_at,\n      authors: [\"https://yoursite.com/about\"],\n      tags: post.categories,\n      images: [\n        {\n          url: `https://yoursite.com/assets/${post.slug}/thumbnail.png`,\n          width: 1024,\n          height: 576,\n          alt: post.title\n        }\n      ]\n    },\n    twitter: {\n      card: \"summary_large_image\",\n      title: `${post.title} | My Site`,\n      description: post.description,\n      images: [{ url: `https://yoursite.com/assets/${post.slug}/thumbnail.png`, width: 1024, height: 576, alt: post.title }]\n    },\n    alternates: {\n      canonical: `https://yoursite.com/${post.slug}`\n    }\n  };\n}\n```\n\n\n---\n\n\n## üìú JSON-LD Schema ‚Äî Why Bother?\n\n\nJSON-LD adds \"structured data\" for Google.\n\n\nIt helps Google understand your page type (Blog Post, Product, Event...) and improves rich snippets.\n\n\nüëâ Example for blog post:\n\n\n```json\nconst jsonLd = {\n  \"@context\": \"https://schema.org\",\n  \"@type\": \"BlogPosting\",\n  mainEntityOfPage: { \"@type\": \"WebPage\", \"@id\": \"https://yoursite.com/my-post\" },\n  headline: \"Post Title\",\n  description: \"Post description\",\n  image: \"https://yoursite.com/assets/my-post/thumbnail.png\",\n  datePublished: \"2024-01-11T11:35:00+07:00\",\n  dateModified: \"2024-01-11T11:35:00+07:00\",\n  author: { \"@type\": \"Person\", name: \"Your Name\", url: \"https://linkedin.com/in/yourname\" },\n  publisher: { \"@type\": \"Person\", name: \"Your Name\", logo: { \"@type\": \"ImageObject\", url: \"https://yoursite.com/avatar.jpg\" } },\n  inLanguage: \"en-US\",\n  isFamilyFriendly: \"true\"\n};\n```\n\n\nüëâ Render this in your component:\n\n\n```typescript\n<script\n  type=\"application/ld+json\"\n  dangerouslySetInnerHTML={{ __html: JSON.stringify(jsonLd) }}\n/>\n```\n\n\nüëâ Use this tool to generate schemas: [https://technicalseo.com/tools/schema-markup-generator/](https://technicalseo.com/tools/schema-markup-generator/)\n\n\n---\n\n\n## üó∫Ô∏è Sitemap ‚Äî Why You Need It\n\n\nSitemap helps Google crawl _all_ your pages. Without it, some deep links may never get indexed.\n\n\nüëâ In Pages Router:\n\n\nUse [`next-sitemap`](https://www.npmjs.com/package/next-sitemap)\n\n\n```shell\nnpm install next-sitemap\nnpx next-sitemap\n```\n\n\nüëâ In App Router:\n\n\nManually define `app/sitemap.ts`:\n\n\n```typescript\nexport default async function sitemap() {\n  const pages = [\n    { url: \"https://yoursite.com\", lastModified: new Date(), changeFrequency: \"daily\", priority: 1 },\n    { url: \"https://yoursite.com/about\", lastModified: new Date(), changeFrequency: \"monthly\", priority: 0.9 }\n    // more pages\n  ];\n\n  return pages;\n}\n```\n\n\nüëâ Result will be accessible at:\n\n\n```plain text\narduino\nCopyEdit\nhttps://yoursite.com/sitemap.xml\n```\n\n\n---\n\n\n## ü§ñ robots.txt ‚Äî Controlling Crawlers\n\n\n`robots.txt` tells search engines which pages to crawl or ignore.\n\n\nüëâ In Pages Router:\n\n\n`public/robots.txt`:\n\n\n```bash\nmakefile\nCopyEdit\nUser-agent: *\nDisallow:\nSitemap: https://yoursite.com/sitemap.xml\n```\n\n\nüëâ To block certain pages:\n\n\n```bash\nDisallow: /search?q=\nDisallow: /admin\n```\n\n\nüëâ In App Router:\n\n\nDefine `app/robots.ts`:\n\n\n```typescript\nexport default function robots() {\n  return {\n    rules: {\n      userAgent: \"*\",\n      allow: [\"/\"],\n      disallow: [\"/search?q=\", \"/admin\"]\n    },\n    sitemap: [\"https://yoursite.com/sitemap.xml\"]\n  };\n}\n```\n\n\n---\n\n\n## üîó Important Link Tags\n\n\nüëâ Always include these in your head:\n\n\n| Link Tag           | Purpose                                                       |\n| ------------------ | ------------------------------------------------------------- |\n| `canonical`        | Prevent duplicate content issues ‚Äî tell Google the \"main\" URL |\n| `alternate`        | Used for multilingual sites                                   |\n| `icon`             | Favicon                                                       |\n| `apple-touch-icon` | iOS home screen icon                                          |\n| `manifest`         | For PWA support                                               |\n\n\n---\n\n\n# Summary ‚Äî What You Should Do (Minimal Checklist)\n\n\n‚úÖ Add full **Meta Tags** (title, description, OG, Twitter)\n\n\n‚úÖ Add **JSON-LD schema** for key pages\n\n\n‚úÖ Generate and serve a **sitemap.xml**\n\n\n‚úÖ Serve a **robots.txt**\n\n\n‚úÖ Include proper **link tags** (canonical, icon, manifest)\n\n\n---\n\n\nIf you do all of this, your Next.js site will:\n\n\n‚úÖ Look great in search results\n\n\n‚úÖ Show rich previews on social media\n\n\n‚úÖ Be fully crawlable and indexable by Google\n\n",
    "tags": [
      "Technology",
      "Productivity"
    ],
    "category": "Technology"
  }
]